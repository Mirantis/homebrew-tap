name: Upload bottles

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of the mkectl bottles to release"
        required: true
  release:
    types: [prereleased , released]

permissions:
  contents: write
  pull-requests: write

jobs:
  upload-bottle:
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-13, macos-14 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Version Info
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${{ github.event.release.tag_name }}
          else
            VERSION=${{ inputs.version }}
          fi
          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          brew install kubernetes-cli@1.31
          
          #install k0sctl v0.19.4
          brew tap k0sproject/tap
          cd "$(brew --repo k0sproject/tap)"
          git fetch origin
          git checkout 247279090669681e6bee89c3b270e0893ca50c58    

      - name: Build the Homebrew bottle
        run: |
          rm -f mkectl--*.tar.gz

          brew install --build-bottle mkectl
          brew bottle mkectl

          bottle_file=$(ls -1 mkectl--*.tar.gz | head -n 1)
          corrected_bottle_file="${bottle_file/.1.tar.gz/.tar.gz}"
          corrected_bottle_file=$(echo "$corrected_bottle_file" | sed 's/--/-/')

          mv "$bottle_file" "$corrected_bottle_file"
          echo "bottle_path=$(pwd)/$corrected_bottle_file" >> $GITHUB_ENV

      - name: Create a GitHub Release (if not existing)
        run: |
          TAG="mkectl-${{ env.version }}"
          RELEASE_EXISTS=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG} | jq -r '.id')

          if [ "$RELEASE_EXISTS" == "null" ]; then
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "{\"tag_name\":\"${TAG}\", \"name\":\"${TAG}\"}" \
              https://api.github.com/repos/${{ github.repository }}/releases
          fi
          
          echo "Waiting for the release to become available..."
          until [ "$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG} | jq -r '.id')" != "null" ]; do
            echo "Release not available yet. Retrying in 10 seconds..."
            sleep 10
          done
      
          echo "Release ${TAG} is now available."

      - name: Upload the Bottle to GitHub Release
        run: |
          echo "Uploading bottle: ${{ env.bottle_path }}"
          TAG="mkectl-${{ env.version }}"

          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -F "file=@${{ env.bottle_path }}" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG} | jq -r '.id')/assets?name=$(basename ${{ env.bottle_path }})"

      - name: Clean up bottles
        run: rm -f ${{ env.bottle_path }}
